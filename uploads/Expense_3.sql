select all. YEAR_S YEAR_S,

a16.LEGAL_ENTITY_CODE LEGAL_ENTITY_CODE, a15.GL_ACCOUNT_CODE

a12.SCALE SCALE,

FC_GL_NO,

a14.COST_CENTER_CODE COST_CENTER_CODE,

(sum(CASE WHEN a13.MONTH_ID=1 THEN a11.MONTH_01

WHEN a13.MONTH ID=2 THEN

a13.MONTH_ID=3 THEN

a11.MONTH 02

a11.MONTH_03

WHEN

WHEN

a13.MONTH_ID=4 THEN

a11.MONTH_04

WHEN

a13.MONTH ID=5 THEN

a11.MONTH 05

WHEN

a13.MONTH_ID=6 THEN

a11.MONTH_06

WHEN

a13.MONTH_ID=7 THEN

WHEN a13.MONTH_ID=8 THEN a11.MONTH 08

a11.MONTH_07

WHEN

a13.MONTH_ID=9 THEN

a11.MONTH 09

WHEN

a13.MONTH_ID=10 THEN

a11.MONTH_10

WHEN

a13.MONTH_ID=11 THEN a11.MONTH_11

WHEN

a13.MONTH_ID=12 THEN

a11.MONTH_12

ELSE NULL END) / 1000.0) WJXBFS1,

(sum(CASE WHEN a13.MONTH_ID=1 THEN a11.MONTH_01

WHEN

WHEN

WHEN

WHEN

WHEN

WHEN

a13.MONTH_ID=2 THEN a13.MONTH_ID=3 THEN a13.MONTH_ID=4 THEN a13.MONTH ID-5 THEN a13.MONTH_ID=6 THEN a13.MONTH_ID=7 THEN WHEN a13.MONTH_ID=8 THEN WHEN a13.MONTH_ID=9 THEN WHEN

a11.MONTH_02

a11.MONTH_03

a11.MONTH_04

WHEN

a11.MONTH 05 a11.MONTH 06 a11.MONTH 07 a11.MONTH 08 a11.MONTH_09 a11.MONTH 10 a11.MONTH_11 a11.MONTH_12

a13.MONTH_ID=10 THEN

a13.MONTH_ID=11 THEN

WHEN a13.MONTH_ID=12 THEN

ELSE NULL END) / 1000000.0) WJXBFS2,

(sum(CASE WHEN a13.MONTH_ID=1 THEN a11.MONTH_01

WHEN a13.MONTH_ID=2 THEN (a11.MONTH_01 + a11.MONTH_02)

WHEN a13.MONTH_ID=3 THEN

((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03)

a13.MONTH_ID=4 THEN a13.MONTH_ID=5 THEN

WHEN WHEN WHEN a13.MONTH_ID=6 THEN

WHEN a13.MONTH_ID=7 THEN

WHEN a13.MONTH_ID=8 THEN

(((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04)

((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05)

(((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06)

((((((a11.MONTH 01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07)

(((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08)

WHEN a13.MONTH_ID=9 THEN ((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11. MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08) + a11.MONTH_09)

WHEN a13.MONTH_ID=10 THEN

WHEN a13.MONTH_ID=11 THEN

WHEN a13.MONTH_ID=12 THEN

ELSE NULL END) / 1000.0) WJXBFS3,

(((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11. MONTH_08) + a11.MONTH_09) + a11.MONTH_10) ((((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08) + a11.MONTH_09) + a11.MONTH 10) + a11.MONTH_11) (((((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08) + a11.MONTH_09) + a11.MONTH_10) + a11.MONTH 11) + a11.MONTH_12)

(sum(CASE WHEN a13.MONTH_ID=1 THEN a11.MONTH_01

WHEN a13.MONTH_ID=2 THEN WHEN a13.MONTH_ID=3 THEN

WHEN

a13.MONTH_ID=4 THEN

WHEN a13.MONTH_ID=5 THEN

WHEN a13.MONTH_ID=6 THEN WHEN a13.MONTH_ID=7 THEN a13.MONTH ID=8 THEN a13.MONTH_ID=9 THEN

WHEN

WHEN

WHEN

WHEN

a13.MONTH ID=10 THEN

a13.MONTH_ID=11 THEN

WHEN a13.MONTH_ID=12 THEN

ELSE NULL END) / 1000000.0) WJXBFS4,

(a11.MONTH_01 + a11.MONTH_02)

((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03)

(((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04)

((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05)

(((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06)

((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07)

(((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08)

((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08) + a11.MONTH_09)

(((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08) + a11.MONTH_09) + a11.MONTH_10)

((((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH _04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11. MONTH_08) + a11.MONTH_09) + a11.MONTH_10) + a11.MONTH_11)

(((((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08) + a11.MONTH_09) + a11.MONTH_10) + a11.MONTH 11) + a11.MONTH_12)

(sum(CASE WHEN a13.MONTH_ID&gt;=4 THEN a11.MONTH_04 ELSE NULL END) / 1000.0) WJXBFS5, (sum(CASE WHEN a13.MONTH_ID&gt;=4 THEN a11.MONTH_04 ELSE NULL END) / 1000000.0) WJXBFS6, (sum(CASE WHEN a13.MONTH_ID&gt;=8 THEN a11.MONTH_08 ELSE NULL END) / 1000.0) WJXBFS7,
(sum(CASE WHEN a13.MONTH_ID&gt;=8 THEN a11.MONTH 08 ELSE NULL END) / 1000000.0) WJXBFS8, (sum(CASE WHEN a13.MONTH_ID&gt;=12 THEN a11.MONTH 12 ELSE NULL END) / 1000.0) WJXBFS9, (sum(CASE WHEN a13.MONTH_ID&gt;=12 THEN a11.MONTH 12 ELSE NULL END) / 1000000.0) WJXBFSa, (sum(CASE WHEN a13.MONTH_ID&gt;=2 THEN a11.MONTH_02 ELSE NULL END) / 1000.0) WJXBFSb, (sum(CASE WHEN a13.MONTH_ID&gt;=2 THEN a11.MONTH_02 ELSE NULL END) / 1000000.0) WJXBFSc, (sum(CASE WHEN a13.MONTH_ID&gt;=1 THEN a11.MONTH_01 ELSE NULL END) / 1000.0) WJXBFSd, (sum(CASE WHEN a13.MONTH_ID&gt;=1 THEN a11.MONTH_01 ELSE NULL END) / 1000000.0) WJXBFSe, (sum(CASE WHEN a13.MONTH_ID&gt;=7 THEN a11.MONTH_07 ELSE NULL END) / 1000.0) WJXBFSF, (sum(CASE WHEN a13.MONTH_ID&gt;=7 THEN a11.MONTH_07 ELSE NULL END) / 1000000.0) WJXBFS10, (sum(CASE WHEN a13.MONTH_ID&gt;=6 THEN a11.MONTH_06 ELSE NULL END) / 1000.0) WJXBFS11, (sum(CASE WHEN a13.MONTH_ID&gt;=6 THEN a11.MONTH 06 ELSE NULL END) / 1000000.0) WJXBFS12, (sum(CASE WHEN a13.MONTH_ID&gt;=3 THEN a11.MONTH_03 ELSE NULL END) / 1000.0) WJXBFS13, (sum(CASE WHEN a13.MONTH_ID&gt;=3 THEN a11.MONTH_03 ELSE NULL END) / 1000000.0) WJXBFS14, (sum(CASE WHEN a13.MONTH_ID&gt;=5 THEN a11.MONTH_05 ELSE NULL END) / 1000.0) WJXBFS15, (sum(CASE WHEN a13.MONTH_ID&gt;=5 THEN a11.MONTH_05 ELSE NULL END) / 1000000.0) WJXBFS16, (sum(CASE WHEN a13.MONTH_ID&gt;=11 THEN a11.MONTH 11 ELSE NULL END) / 1000.0) WJXBFS17, (sum(CASE WHEN a13.MONTH_ID&gt;=11 THEN a11.MONTH 11 ELSE NULL END) / 1000000.0) WJXBFS18,9 (sum(CASE WHEN a13.MONTH_ID&gt;=10 THEN a11.MONTH 10 ELSE NULL END) / 1000.0) WJXBFS19, (sum(CASE WHEN a13.MONTH_ID&gt;=10 THEN a11.MONTH 10 ELSE NULL END) / 1000000.0) WJXBFS1a, (sum(CASE WHEN a13.MONTH_ID&gt;=9 THEN a11.MONTH_09 ELSE NULL END) / 1000.0) WJXBFS1b, (sum(CASE WHEN a13.MONTH_ID&gt;=9 THEN a11.MONTH_09 ELSE NULL END) / 1000000.0) WJXBFS1C DWHSTG. LEDGER_STAT_FULL a11

from

cross join

DWHSTG.DIM_CUR_SCALE

on

(a11. YEAR_S = a13.YEAR_S)

join

OFSAATM.DIM_MONTH_YEAR a13

a12

where

join

on

join

on

join

on

join

on

OFSAATM.DIM_COST_CENTER_B

a14

(a11.COST_CENTER_ID = a14.COST_CENTER_ID)

OFSAATM.DIM GENERAL LEDGER_B a15

(a11.GL_ACCOUNT_ID = a15.GL_ACCOUNT_ID)

OFSAATM.DIM_LEGAL_ENTITY_B

a16

(a11.LEGAL_ENTITY_ID = a16.LEGAL_ENTITY_ID)

DWHSTG.DIM_LE_CC_FN_DIV_MAP

a17

(a14.COST CENTER_CODE = a17.COST_CENTER_CODE and

a16.LEGAL_ENTITY_CODE = a17.LEGAL_ENTITY_CODE)

(a17.GRP in (&#039;Retail Banking&#039;)

and a11.FINANCIAL_ELEM_ID in (212, 457, 10050, 10051, 10005, 10002, 10150, 10009) and a12.SCALE in (1000)

and a11.YEAR_S

=

cast (2023 as INTEGER)

and a13.MONTH_ID in (3)

and a11.CONSOLIDATION_CD in (100))

group by

a11.YEAR_S,

a16.LEGAL_ENTITY_CODE,

a15.GL_ACCOUNT_CODE,

a12.SCALE,

a14.COST_CENTER_CODE

create table ZZMD01 nologging as

select pal1.YEAR_S YEAR_S,

pa11.LEGAL_ENTITY_CODE LEGAL ENTITY_CODE,

pa11.FC_GL_NO FC_GL_NO,

pa11.SCALE SCALE,

pa11.COST_CENTER_CODE COST_CENTER_CODE,

sum(case when pall. SCALE=1000 then pa11.WJXBFS1 else pa11.WJXBFS2 end) WJXBFS1, sum(case when pa11.SCALE=1000 then pa11.WJXBFS3 else pa11.WJXBFS4 end) WJXBFS2, sum(case when pa11.SCALE=1000 then pa11.WJXBFS5 else pa11.WJXBFS6 end) WJXBFS3, sum(case when pa11.SCALE=1000 then pa11.WJXBFS7 else pa11.WJXBFS8 end) sum(case when pa11. SCALE=1000 then pa11.WJXBFS9 else pa11.WJXBFSa end) sum(case when pa11.SCALE=1000 then pa11.WJXBFSb else pa11.WJXBFSC end) sum(case when pa11.SCALE=1000 then pa11.WJXBFSd else pa11.WJXBFSe end) WJXBFS7, sum(case when pa11.SCALE=1000 then pa11.WJXBFSF else pa11.WJXBFS10 end) sum(case when pa11.SCALE=1000 then pa11.WJXBFS11 else pa11.WJXBFS12 end)

WJXBFS4, WJXBFS5, WJXBFS6,

WJXBFS8,

WJXBFS9,
sum(case when pa11.SCALE=1000 then pa11.WJXBFS13 else pa11.WJXBFS14 end) WJXBFSa, sum(case when pa11.SCALE=1000 then pa11.WJXBFS15 else pa11.WJXBFS16 end) WJXBFSb, sum(case when pa11.SCALE=1000 then pa11.WJXBFS17 else pa11.WJXBFS18 end) WJXBFSC, sum(case when pa11.SCALE=1000 then pa11.WJXBFS19 else pa11.WJXBFS1a end) WJXBFSd, sum(case when pa11.SCALE=1000 then pa11.WJXBFS1b else pa11.WJXBFS1c end) ZZMDOO

from

join

pa11

DWHSTG.DIM_LE_CC_FN_DIV_MAP

a12

on (pa11.COST_CENTER_CODE = a12.COST_CENTER_CODE and

pa11.LEGAL_ENTITY_CODE = a12.LEGAL_ENTITY_CODE)

where (pa11.SCALE in (1000)

and a12.GRP in (&#039;Retail Banking&#039;))

group by

T

pa11. YEAR_S,

pa11. LEGAL_ENTITY_CODE,

pa11.FC_GL_NO,

pa11.SCALE,

pa11.COST_CENTER_CODE

create table ZZMD02 nologging as

select all. YEAR_S YEAR_S,

a16.LEGAL_ENTITY_CODE

LEGAL_ENTITY_CODE,

a15.GL_ACCOUNT_CODE FC_GL_NO,

a12.SCALE SCALE,

a14.COST_CENTER_CODE COST CENTER_CODE,

(sum(CASE WHEN a13.MONTH_ID=1 THEN a11.MONTH_01

WHEN

WHEN

a13.MONTH_ID=2 THEN a13.MONTH_ID=3 THEN WHEN a13.MONTH_ID=4 THEN WHEN a13.MONTH_ID=5 THEN WHEN a13.MONTH_ID=6 THEN

(a11.MONTH_01 + a11.MONTH_02)

WJXBFSe

((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03)

(((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04)

((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05)

(((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06)

WHEN a13.MONTH_ID=7 THEN WHEN WHEN

((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07)

a13.MONTH_ID=8 THEN

(((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08)

a13.MONTH_ID=9 THEN

WHEN a13.MONTH_ID=10 THEN WHEN a13.MONTH_ID=11 THEN a13.MONTH_ID=12 THEN

((((((((a11.MONTH_01 + a11.MONTH_02) a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) a11.MONTH_08) + a11.MONTH_09) (((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) a11.MONTH_07) + a11.MONTH_08) a11.MONTH_09) + a11.MONTH_10) ((((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08) + a11.MONTH_09) + a11.MONTH_10) + a11.MONTH 11) (((((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08) + a11.MONTH_09) + a11.MONTH_10) + a11.MONTH 11) + a11.MONTH_12) (sum(CASE WHEN a13.MONTH_ID=1 THEN a11.MONTH_01

WHEN

ELSE NULL END) / 1000.0) WJXBFS1,

WHEN

a13.MONTH_ID=2 THEN

WHEN a13.MONTH ID=3 THEN WHEN

a13.MONTH_ID=4 THEN WHEN a13.MONTH_ID=5 THEN WHEN a13.MONTH_ID=6 THEN WHEN a13.MONTH_ID=7 THEN WHEN a13.MONTH_ID=8 THEN WHEN a13.MONTH_ID=9 THEN WHEN

WHEN

a13.MONTH_ID=10 THEN

a13.MONTH_ID=11 THEN

WHEN a13.MONTH_ID=12 THEN

ELSE NULL END) / 1000000.0) WJXBFS2,

from

(a11.MONTH_01 + a11.MONTH_02)

((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03)

(((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04)

((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05)

(((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06)

((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07)

(((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08)

((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08) + a11.MONTH_09)

(((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08) + a11.MONTH_09) + a11.MONTH_10)

((((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08) + a11.MONTH_09) + a11.MONTH_10) + a11.MONTH 11) (((((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08) + a11.MONTH_09) + a11.MONTH_10) + a11.MONTH 11) + a11.MONTH_12)

(sum((((((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08) + a11.MONTH_09) + a11.MONTH_10) + a11.MONTH 11) + a11.MONTH 12)) / 1000.0) WJXBFS3, (sum((((((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08) + a11.MONTH_09) + a11.MONTH_10) + a11.MONTH 11) + a11.MONTH_12)) / 1000000.0) WJXBFS4 DWHSTG. LEDGER_STAT FULL a11

cross join

join

on

DWHSTG.DIM CUR_SCALE OFSAATM.DIM_MONTH_YEAR a13 (a11.YEAR_S = a13.YEAR_S)

a12

a14

(a11.COST_CENTER_ID = a14.COST_CENTER_ID)

join

on

join

on

join

OFSAATM.DIM_COST_CENTER_B

OFSAATM.DIM GENERAL LEDGER_B a15

(a11.GL_ACCOUNT_ID = a15.GL_ACCOUNT_ID) OFSAATM.DIM_LEGAL_ENTITY_B

a16
where

on

join

on

(a11.LEGAL_ENTITY_ID

=

a16.LEGAL_ENTITY_ID) a17

DWHSTG.DIM_LE_CC_FN_DIV_MAP

(a14.COST_CENTER_CODE = a17.COST_CENTER_CODE and

a16.LEGAL_ENTITY_CODE = a17.LEGAL_ENTITY_CODE)

(a17.GRP in (&#039;Retail Banking&#039;)

and a11.FINANCIAL_ELEM_ID in (212, 457, 10050, 10051, 10005, 10002, 10150, 10009) and a12.SCALE in (1000)

and a11.YEAR_S =

cast (2023 as INTEGER) - 1

and a13.MONTH_ID in (3)

and a11.CONSOLIDATION_CD in (100))

group by

a11.YEAR_S,

a16.LEGAL_ENTITY_CODE,

a15.GL_ACCOUNT_CODE,

a12.SCALE,

a14.COST_CENTER_CODE

create table ZZMD03 nologging as

select pal1.YEAR_S YEAR_S,

pa11.LEGAL_ENTITY_CODE LEGAL ENTITY_CODE,

pa11.FC_GL_NO FC_GL_NO,

pa11.SCALE SCALE,

pa11.COST_CENTER_CODE COST_CENTER_CODE,

sum(case when pa11.SCALE=1000 then pa11.WJXBFS1 else pa11.WJXBFS2 end) WJXBFS1 ZZMD02

from

join

pa11

DWHSTG.DIM_LE_CC_FN_DIV_MAP

a12

on (pa11.COST_CENTER_CODE = a12.COST_CENTER_CODE and

pa11.LEGAL_ENTITY_CODE = a12. LEGAL_ENTITY_CODE)

where (pa11.SCALE in (1000)

and a12.GRP in (&#039;Retail Banking&#039;))

group by

pa11.YEAR_S,

pa11.LEGAL_ENTITY_CODE,

pa11.FC_GL_NO,

pa11.SCALE,

pa11.COST CENTER_CODE

create table ZZMD04 nologging as

select all. YEAR_S YEAR_S,

a15.LEGAL_ENTITY_CODE LEGAL_ENTITY_CODE,

a14.GL_ACCOUNT_CODE

a12.SCALE SCALE,

FC_GL_NO,

=

=

a13.COST_CENTER_CODE COST_CENTER_CODE, (sum((Case when (a11.YEAR_S = cast (2023 as (sum((Case when (a11.YEAR_S = cast (2023 as (sum((Case when (a11. YEAR_S cast (2023 as (sum((Case when (a11. YEAR_S cast (2023 as (sum((Case when (a11.YEAR_S cast (2023 as (sum((Case when (a11. YEAR_S cast (2023 as (sum((Case when (a11.YEAR_S = cast(2023 as (sum((Case when (a11. YEAR_S cast(2023 as (sum((Case when (a11.YEAR_S = cast (2023 as (sum((Case when (a11.YEAR_S = cast (2023 as (sum((Case when (a11. YEAR_S cast (2023 as (sum((Case when (a11. YEAR_S cast (2023 as (sum((Case when (a11.YEAR_S cast (2023 as (sum((Case when (a11. YEAR_S cast (2023 as (sum((Case when (a11. YEAR_S = cast (2023 as (sum((Case when (a11.YEAR_S cast(2023 as (sum((Case when (a11.YEAR_S = cast(2023 as (sum((Case when (a11.YEAR_S = cast (2023 as (sum((Case when (a11.YEAR_S = cast (2023 as

=

=

INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_04 else NULL end)) / 1000.0) WJXBFS1, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11. MONTH 04 else NULL end)) / 1000000.0) WJXBF52, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_08 else NULL end)) / 1000.0) WJXBFS3, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_08 else NULL end)) / 1000000.0) WJXBFS4, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH 12 else NULL end)) / 1000.0) WJXBFS5, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH 12 else NULL end)) / 1000000.0) WJXBFS6, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_02 else NULL end)) / 1000.0) WJXBFS7, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH 02 else NULL end)) / 1000000.0) WJXBFS8, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_01 else NULL end)) / 1000.0) WJXBFS9, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11. MONTH_01 else NULL end)) / 1000000.0) WJXBFSa, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_07 else NULL end)) / 1000.0) WJXBFSb, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_07 else NULL end)) / 1000000.0) WJXBFSC, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_06 else NULL end)) / 1000.0) WJXBFSd, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_06 else NULL end)) / 1000000.0) WJXBFSe, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_03 else NULL end)) / 1000.0) WJXBFSF, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_03 else NULL end)) / 1000000.0) WJXBFS10, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11. MONTH_05 else NULL end)) / 1000.0) WJXBFS11, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_05 else NULL end)) / 1000000.0) WJXBFS12, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH 11 else NULL end)) / 1000.0) WJXBFS13,
sum(case when pa11.SCALE=1000 then pa11.WJXBFS13 else pa11.WJXBFS14 end) WJXBFSa, sum(case when pa11.SCALE=1000 then pa11.WJXBFS15 else pa11.WJXBFS16 end) WJXBFSb, sum(case when pa11.SCALE=1000 then pa11.WJXBFS17 else pa11.WJXBFS18 end) WJXBFSC, sum(case when pa11.SCALE=1000 then pa11.WJXBFS19 else pa11.WJXBFS1a end) WJXBFSd, sum(case when pa11.SCALE=1000 then pa11.WJXBFS1b else pa11.WJXBFS1c end) ZZMDOO

from

join

pa11

DWHSTG.DIM_LE_CC_FN_DIV_MAP

a12

on (pa11.COST_CENTER_CODE = a12.COST_CENTER_CODE and

pa11.LEGAL_ENTITY_CODE = a12.LEGAL_ENTITY_CODE)

where (pa11.SCALE in (1000)

and a12.GRP in (&#039;Retail Banking&#039;))

group by

T

pa11. YEAR_S,

pa11. LEGAL_ENTITY_CODE,

pa11.FC_GL_NO,

pa11.SCALE,

pa11.COST_CENTER_CODE

create table ZZMD02 nologging as

select all. YEAR_S YEAR_S,

a16.LEGAL_ENTITY_CODE

LEGAL_ENTITY_CODE,

a15.GL_ACCOUNT_CODE FC_GL_NO,

a12.SCALE SCALE,

a14.COST_CENTER_CODE COST CENTER_CODE,

(sum(CASE WHEN a13.MONTH_ID=1 THEN a11.MONTH_01

WHEN

WHEN

a13.MONTH_ID=2 THEN a13.MONTH_ID=3 THEN WHEN a13.MONTH_ID=4 THEN WHEN a13.MONTH_ID=5 THEN WHEN a13.MONTH_ID=6 THEN

(a11.MONTH_01 + a11.MONTH_02)

WJXBFSe

((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03)

(((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04)

((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05)

(((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06)

WHEN a13.MONTH_ID=7 THEN WHEN WHEN

((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07)

a13.MONTH_ID=8 THEN

(((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08)

a13.MONTH_ID=9 THEN

WHEN a13.MONTH_ID=10 THEN WHEN a13.MONTH_ID=11 THEN a13.MONTH_ID=12 THEN

((((((((a11.MONTH_01 + a11.MONTH_02) a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) a11.MONTH_08) + a11.MONTH_09) (((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) a11.MONTH_07) + a11.MONTH_08) a11.MONTH_09) + a11.MONTH_10) ((((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08) + a11.MONTH_09) + a11.MONTH_10) + a11.MONTH 11) (((((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08) + a11.MONTH_09) + a11.MONTH_10) + a11.MONTH 11) + a11.MONTH_12) (sum(CASE WHEN a13.MONTH_ID=1 THEN a11.MONTH_01

WHEN

ELSE NULL END) / 1000.0) WJXBFS1,

WHEN

a13.MONTH_ID=2 THEN

WHEN a13.MONTH ID=3 THEN WHEN

a13.MONTH_ID=4 THEN WHEN a13.MONTH_ID=5 THEN WHEN a13.MONTH_ID=6 THEN WHEN a13.MONTH_ID=7 THEN WHEN a13.MONTH_ID=8 THEN WHEN a13.MONTH_ID=9 THEN WHEN

WHEN

a13.MONTH_ID=10 THEN

a13.MONTH_ID=11 THEN

WHEN a13.MONTH_ID=12 THEN

ELSE NULL END) / 1000000.0) WJXBFS2,

from

(a11.MONTH_01 + a11.MONTH_02)

((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03)

(((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04)

((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05)

(((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06)

((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07)

(((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08)

((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08) + a11.MONTH_09)

(((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08) + a11.MONTH_09) + a11.MONTH_10)

((((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08) + a11.MONTH_09) + a11.MONTH_10) + a11.MONTH 11) (((((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08) + a11.MONTH_09) + a11.MONTH_10) + a11.MONTH 11) + a11.MONTH_12)

(sum((((((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08) + a11.MONTH_09) + a11.MONTH_10) + a11.MONTH 11) + a11.MONTH 12)) / 1000.0) WJXBFS3, (sum((((((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08) + a11.MONTH_09) + a11.MONTH_10) + a11.MONTH 11) + a11.MONTH_12)) / 1000000.0) WJXBFS4 DWHSTG. LEDGER_STAT FULL a11

cross join

join

on

DWHSTG.DIM CUR_SCALE OFSAATM.DIM_MONTH_YEAR a13 (a11.YEAR_S = a13.YEAR_S)

a12

a14

(a11.COST_CENTER_ID = a14.COST_CENTER_ID)

join

on

join

on

join

OFSAATM.DIM_COST_CENTER_B

OFSAATM.DIM GENERAL LEDGER_B a15

(a11.GL_ACCOUNT_ID = a15.GL_ACCOUNT_ID) OFSAATM.DIM_LEGAL_ENTITY_B

a16
where

on

join

on

(a11.LEGAL_ENTITY_ID

=

a16.LEGAL_ENTITY_ID) a17

DWHSTG.DIM_LE_CC_FN_DIV_MAP

(a14.COST_CENTER_CODE = a17.COST_CENTER_CODE and

a16.LEGAL_ENTITY_CODE = a17.LEGAL_ENTITY_CODE)

(a17.GRP in (&#039;Retail Banking&#039;)

and a11.FINANCIAL_ELEM_ID in (212, 457, 10050, 10051, 10005, 10002, 10150, 10009) and a12.SCALE in (1000)

and a11.YEAR_S =

cast (2023 as INTEGER) - 1

and a13.MONTH_ID in (3)

and a11.CONSOLIDATION_CD in (100))

group by

a11.YEAR_S,

a16.LEGAL_ENTITY_CODE,

a15.GL_ACCOUNT_CODE,

a12.SCALE,

a14.COST_CENTER_CODE

create table ZZMD03 nologging as

select pal1.YEAR_S YEAR_S,

pa11.LEGAL_ENTITY_CODE LEGAL ENTITY_CODE,

pa11.FC_GL_NO FC_GL_NO,

pa11.SCALE SCALE,

pa11.COST_CENTER_CODE COST_CENTER_CODE,

sum(case when pa11.SCALE=1000 then pa11.WJXBFS1 else pa11.WJXBFS2 end) WJXBFS1 ZZMD02

from

join

pa11

DWHSTG.DIM_LE_CC_FN_DIV_MAP

a12

on (pa11.COST_CENTER_CODE = a12.COST_CENTER_CODE and

pa11.LEGAL_ENTITY_CODE = a12. LEGAL_ENTITY_CODE)

where (pa11.SCALE in (1000)

and a12.GRP in (&#039;Retail Banking&#039;))

group by

pa11.YEAR_S,

pa11.LEGAL_ENTITY_CODE,

pa11.FC_GL_NO,

pa11.SCALE,

pa11.COST CENTER_CODE

create table ZZMD04 nologging as

select all. YEAR_S YEAR_S,

a15.LEGAL_ENTITY_CODE LEGAL_ENTITY_CODE,

a14.GL_ACCOUNT_CODE

a12.SCALE SCALE,

FC_GL_NO,

=

=

a13.COST_CENTER_CODE COST_CENTER_CODE, (sum((Case when (a11.YEAR_S = cast (2023 as (sum((Case when (a11.YEAR_S = cast (2023 as (sum((Case when (a11. YEAR_S cast (2023 as (sum((Case when (a11. YEAR_S cast (2023 as (sum((Case when (a11.YEAR_S cast (2023 as (sum((Case when (a11. YEAR_S cast (2023 as (sum((Case when (a11.YEAR_S = cast(2023 as (sum((Case when (a11. YEAR_S cast(2023 as (sum((Case when (a11.YEAR_S = cast (2023 as (sum((Case when (a11.YEAR_S = cast (2023 as (sum((Case when (a11. YEAR_S cast (2023 as (sum((Case when (a11. YEAR_S cast (2023 as (sum((Case when (a11.YEAR_S cast (2023 as (sum((Case when (a11. YEAR_S cast (2023 as (sum((Case when (a11. YEAR_S = cast (2023 as (sum((Case when (a11.YEAR_S cast(2023 as (sum((Case when (a11.YEAR_S = cast(2023 as (sum((Case when (a11.YEAR_S = cast (2023 as (sum((Case when (a11.YEAR_S = cast (2023 as

=

=

INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_04 else NULL end)) / 1000.0) WJXBFS1, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11. MONTH 04 else NULL end)) / 1000000.0) WJXBF52, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_08 else NULL end)) / 1000.0) WJXBFS3, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_08 else NULL end)) / 1000000.0) WJXBFS4, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH 12 else NULL end)) / 1000.0) WJXBFS5, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH 12 else NULL end)) / 1000000.0) WJXBFS6, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_02 else NULL end)) / 1000.0) WJXBFS7, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH 02 else NULL end)) / 1000000.0) WJXBFS8, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_01 else NULL end)) / 1000.0) WJXBFS9, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11. MONTH_01 else NULL end)) / 1000000.0) WJXBFSa, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_07 else NULL end)) / 1000.0) WJXBFSb, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_07 else NULL end)) / 1000000.0) WJXBFSC, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_06 else NULL end)) / 1000.0) WJXBFSd, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_06 else NULL end)) / 1000000.0) WJXBFSe, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_03 else NULL end)) / 1000.0) WJXBFSF, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_03 else NULL end)) / 1000000.0) WJXBFS10, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11. MONTH_05 else NULL end)) / 1000.0) WJXBFS11, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_05 else NULL end)) / 1000000.0) WJXBFS12, INTEGER) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH 11 else NULL end)) / 1000.0) WJXBFS13,
on (a11.LEGAL_ENTITY_ID = a16.LEGAL_ENTITY_ID)
join DWHSTG.DIM_LE_CC_FN_DIV_MAP a17
on (a14.COST_CENTER_CODE = a17.COST_CENTER_CODE and
    a16.LEGAL_ENTITY_CODE = a17.LEGAL_ENTITY_CODE)
on (a11.FINANCIAL_ITEM_ID in (212, 457, 10050, 10051, 10005, 10002, 10150, 10009))
and a11.YEAR_S = cast(2023 as INTEGER ) - 1
and a13.MONTH_ID in (10)
and a11.CONSOLIDATION_CD in (100)
group by a11.YEAR_S,
         a16.LEGAL_ENTITY_CODE,
         a12.SCALE,
         a15.GL_ACCOUNT_CODE,
         a14.COST_CENTER_CODE;

create table ZZMD03 nologging as
select pa11.YEAR_S YEAR_S,
       pa11.LEGAL_ENTITY_CODE LEGAL_ENTITY_CODE,
       pa11.FC_GL_NO FC_GL_NO,
       pa11.SCALE SCALE,
       pa11.COST_CENTER_CODE COST_CENTER_CODE,
       (case when pa11.WJXBFS1_SCALE=1000 then pa11.WJXBFS1 else pa11.WJXBFS2 end) WJXBFS1
from ZZMD02 pa11
join DWHSTG.DIM_LE_CC_FN_DIV_MAP a12
on (pa11.COST_CENTER_CODE = a12.COST_CENTER_CODE
    and pa11.LEGAL_ENTITY_CODE = a12.LEGAL_ENTITY_CODE)
where pa11.SCALE in (1000)
  and a12.GRP in ('Retail Banking')
group by pa11.YEAR_S,
         pa11.LEGAL_ENTITY_CODE,
         pa11.FC_GL_NO,
         pa11.SCALE,
         pa11.COST_CENTER_CODE;

create table ZZMD04 nologging as
select a11.YEAR_S YEAR_S,
       a15.LEGAL_ENTITY_CODE LEGAL_ENTITY_CODE,
       a15.GL_ACCOUNT_CODE FC_GL_NO,
       a12.SCALE SCALE,
       a13.COST_CENTER_CODE COST_CENTER_CODE,
       (sum(Case when a11.YEAR_S = cast(2023 as INTEGER ) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_04 else NULL end)) / 1000.0) WJXBFS1,
       (sum(Case when a11.YEAR_S = cast(2023 as INTEGER ) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_08 else NULL end)) / 1000.0) WJXBFS2,
       (sum(Case when a11.YEAR_S = cast(2023 as INTEGER ) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_08 else NULL end)) / 100000.0) WJXBFS3,
       (sum(Case when a11.YEAR_S = cast(2023 as INTEGER ) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_12 else NULL end)) / 1000.0) WJXBFS4,
       (sum(Case when a11.YEAR_S = cast(2023 as INTEGER ) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_12 else NULL end)) / 100000.0) WJXBFS5,
       (sum(Case when a11.YEAR_S = cast(2023 as INTEGER ) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_01 else NULL end)) / 1000.0) WJXBFS6,
       (sum(Case when a11.YEAR_S = cast(2023 as INTEGER ) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_02 else NULL end)) / 1000.0) WJXBFS7,
       (sum(Case when a11.YEAR_S = cast(2023 as INTEGER ) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_02 else NULL end)) / 100000.0) WJXBFS8,
       (sum(Case when a11.YEAR_S = cast(2023 as INTEGER ) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_01 else NULL end)) / 100000.0) WJXBFS9,
       (sum(Case when a11.YEAR_S = cast(2023 as INTEGER ) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_07 else NULL end)) / 1000000.0) WJXBFSa,
       (sum(Case when a11.YEAR_S = cast(2023 as INTEGER ) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_06 else NULL end)) / 1000.0) WJXBFSb,
       (sum(Case when a11.YEAR_S = cast(2023 as INTEGER ) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_06 else NULL end)) / 1000000.0) WJXBFSc,
       (sum(Case when a11.YEAR_S = cast(2023 as INTEGER ) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_03 else NULL end)) / 1000.0) WJXBFSd,
       (sum(Case when a11.YEAR_S = cast(2023 as INTEGER ) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_03 else NULL end)) / 1000000.0) WJXBFSe,
       (sum(Case when a11.YEAR_S = cast(2023 as INTEGER ) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_05 else NULL end)) / 1000.0) WJXBFSf,
       (sum(Case when a11.YEAR_S = cast(2023 as INTEGER ) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_05 else NULL end)) / 1000000.0) WJXBFSg,
       (sum(Case when a11.YEAR_S = cast(2023 as INTEGER ) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_10 else NULL end)) / 1000.0) WJXBFS10,
       (sum(Case when a11.YEAR_S = cast(2023 as INTEGER ) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_05 else NULL end)) / 1000000.0) WJXBFS11,
       (sum(Case when a11.YEAR_S = cast(2023 as INTEGER ) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_05 else NULL end)) / 100000.0) WJXBFS12,
       (sum(Case when a11.YEAR_S = cast(2023 as INTEGER ) and a11.CONSOLIDATION_CD in (200)) then a11.MONTH_12 else NULL end)) / 1000.0) WJXBFS13
(sum((Case when (a11.YEAR_S = cast(2023 as INTEGER ) and a11.CONSOLIDATION_CD in (200) then a11.MONTH_01 else NULL end)) / 1000000.0)) WJXBF514,

        (sum((Case when (a11.YEAR_S = cast(2023 as INTEGER ) and a11.CONSOLIDATION_CD in (200) then a11.MONTH_10 else NULL end)) / 1000.0)) WJXBF515,

        (sum((Case when (a11.YEAR_S = cast(2023 as INTEGER ) and a11.CONSOLIDATION_CD in (200) then a11.MONTH_10 else NULL end)) / 1000000.0)) WJXBF516,

        (sum((Case when (a11.YEAR_S = cast(2023 as INTEGER ) and a11.CONSOLIDATION_CD in (200) then a11.MONTH_09 else NULL end)) / 1000.0)) WJXBF517,

        (sum((Case when (a11.YEAR_S = cast(2023 as INTEGER ) and a11.CONSOLIDATION_CD in (200) then a11.MONTH_09 else NULL end)) / 1000000.0)) WJXBF518,

        max((sum((Case when (a11.YEAR_S = cast(2023 as INTEGER ) and a11.CONSOLIDATION_CD in (200) then 1 else 0 end)))) GODWFLAGS_1,

        (sum((Case when (a11.YEAR_S = cast(2023 as INTEGER ) - 1 and a11.CONSOLIDATION_CD in (100) then a11.MONTH_04 else NULL end)) / 1000.0)) WJXBF519,

        (sum((Case when (a11.YEAR_S = cast(2023 as INTEGER ) - 1 and a11.CONSOLIDATION_CD in (100) then a11.MONTH_04 else NULL end)) / 1000000.0)) WJXBF51a,

        (sum((Case when (a11.YEAR_S = cast(2023 as INTEGER ) - 1 and a11.CONSOLIDATION_CD in (100) then a11.MONTH_08 else NULL end)) / 1000.0)) WJXBF51b,

        (sum((Case when (a11.YEAR_S = cast(2023 as INTEGER ) - 1 and a11.CONSOLIDATION_CD in (100) then a11.MONTH_08 else NULL end)) / 1000000.0)) WJXBF51c,

        (sum((Case when (a11.YEAR_S = cast(2023 as INTEGER ) - 1 and a11.CONSOLIDATION_CD in (100) then a11.MONTH_12 else NULL end)) / 1000.0)) WJXBF51d,

        (sum((Case when (a11.YEAR_S = cast(2023 as INTEGER ) - 1 and a11.CONSOLIDATION_CD in (100) then a11.MONTH_12 else NULL end)) / 1000000.0)) WJXBF51e,

        (sum((Case when (a11.YEAR_S = cast(2023 as INTEGER ) - 1 and a11.CONSOLIDATION_CD in (100) then a11.MONTH_02 else NULL end)) / 1000000.0)) WJXBF520,

        (sum((Case when (a11.YEAR_S = cast(2023 as INTEGER ) - 1 and a11.CONSOLIDATION_CD in (100) then a11.MONTH_02 else NULL end)) / 1000000.0)) WJXBF521,

        (sum((Case when (a11.YEAR_S = cast(2023 as INTEGER ) - 1 and a11.CONSOLIDATION_CD in (100) then a11.MONTH_01 else NULL end)) / 1000000.0)) WJXBF522,

        (sum((Case when (a11.YEAR_S = cast(2023 as INTEGER ) - 1 and a11.CONSOLIDATION_CD in (100) then a11.MONTH_07 else NULL end)) / 1000000.0)) WJXBF524,

        (sum((Case when (a11.YEAR_S = cast(2023 as INTEGER ) - 1 and a11.CONSOLIDATION_CD in (100) then a11.MONTH_06 else NULL end)) / 1000.0)) WJXBF525,

        (sum((Case when (a11.YEAR_S = cast(2023 as INTEGER ) - 1 and a11.CONSOLIDATION_CD in (100) then a11.MONTH_06 else NULL end)) / 1000000.0)) WJXBF526,

        (sum((Case when (a11.YEAR_S = cast(2023 as INTEGER ) - 1 and a11.CONSOLIDATION_CD in (100) then a11.MONTH_03 else NULL end)) / 1000.0)) WJXBF527,

        (sum((Case when (a11.YEAR_S = cast(2023 as INTEGER ) - 1 and a11.CONSOLIDATION_CD in (100) then a11.MONTH_03 else NULL end)) / 1000000.0)) WJXBF528,

        (sum((Case when (a11.YEAR_S = cast(2023 as INTEGER ) - 1 and a11.CONSOLIDATION_CD in (100) then a11.MONTH_05 else NULL end)) / 1000.0)) WJXBF529,

        (sum((Case when (a11.YEAR_S = cast(2023 as INTEGER ) - 1 and a11.CONSOLIDATION_CD in (100) then a11.MONTH_05 else NULL end)) / 1000000.0)) WJXBF52a,

        (sum((Case when (a11.YEAR_S = cast(2023 as INTEGER ) - 1 and a11.CONSOLIDATION_CD in (100) then a11.MONTH_10 else NULL end)) / 1000.0)) WJXBF52b,

        (sum((Case when (a11.YEAR_S = cast(2023 as INTEGER ) - 1 and a11.CONSOLIDATION_CD in (100) then a11.MONTH_10 else NULL end)) / 1000000.0)) WJXBF52c,

        (sum((Case when (a11.YEAR_S = cast(2023 as INTEGER ) - 1 and a11.CONSOLIDATION_CD in (100) then a11.MONTH_11 else NULL end)) / 1000.0)) WJXBF52d,

        (sum((Case when (a11.YEAR_S = cast(2023 as INTEGER ) - 1 and a11.CONSOLIDATION_CD in (100) then a11.MONTH_11 else NULL end)) / 1000000.0)) WJXBF52e,

        (sum((Case when (a11.YEAR_S = cast(2023 as INTEGER ) - 1 and a11.CONSOLIDATION_CD in (100) then a11.MONTH_09 else NULL end)) / 1000.0)) WJXBF52f,

        (sum((Case when (a11.YEAR_S = cast(2023 as INTEGER ) - 1 and a11.CONSOLIDATION_CD in (100) then a11.MONTH_09 else NULL end)) / 1000000.0)) WJXBF530,

        (sum((Case when (a11.YEAR_S = cast(2023 as INTEGER ) - 1 and a11.CONSOLIDATION_CD in (100) then 1 else 0 end))) GODWFLAGc_1

        

        from DWHS15.LEDGER_STAT_FULL a11

        cross join DWHS15.DIM_CURR_SCALE a12

        join OFSAATM.DIM_COST_CENTER_B a13

        on a11.COST_CENTER_ID = a13.COST_CENTER_ID

        join OFSAATM.DIM_GENERAL_LEDGER_B a14

        on a11.GL_ACCOUNT_ID = a14.GL_ACCOUNT_ID

        join OFSAATM.DIM_LEGAL_ENTITY_B a15

        on (a11.LEGAL_ENTITY_ID = a15.LEGAL_ENTITY_ID)

        join DWHS15.DIM_LE_CC_FN_DMV_MAP a16

        on (a13.COST_CENTER_CODE = a16.COST_CENTER_CODE and

        a15.LEGAL_ENTITY_CODE = a16.LEGAL_ENTITY_CODE)

        where a11.FINANCIAL_ELEM_ID in (212, 457, 10050, 10051, 10005, 10002, 10150, 10009)

        and a12.SCALE in (1000)

        and ((a11.YEAR_S = cast(2023 as INTEGER )

        and a11.CONSOLIDATION_CD in (200))

        or (a11.YEAR_S = cast(2023 as INTEGER ) - 1

        and a11.CONSOLIDATION_CD in (100))))

        group by a11.YEAR_S,

        a13.COST_CENTER_CODE,

        a14.GL_ACCOUNT_CODE,

        a15.LEGAL_ENTITY_CODE

        

        create table ZT005 mapping as

        select a11.YEAR_S YEAR_S,

        a15.LEGAL_ENTITY_CODE LEGAL_ENTITY_CODE,

        a13.COST_CENTER_CODE,

        a14.GL_NO FC_GL_NO,

        a12.SCALE SCALE,
		pa11.COST_CENTER_CODE COST_CENTER_CODE,
sum(case when pa11.SCALE=1000 then pa11.WJXBFS1 else pa11.WJXBFS2 end) WJXBFS1,
sum(case when pa11.SCALE=1000 then pa11.WJXBFS3 else pa11.WJXBFS4 end) WJXBFS2,
sum(case when pa11.SCALE=1000 then pa11.WJXBFS5 else pa11.WJXBFS6 end) WJXBFS3,
sum(case when pa11.SCALE=1000 then pa11.WJXBFS7 else pa11.WJXBFS8 end) WJXBFS4,
sum(case when pa11.SCALE=1000 then pa11.WJXBFS9 else pa11.WJXBFSa end) WJXBFS5,
sum(case when pa11.SCALE=1000 then pa11.WJXBFSb else pa11.WJXBFSc end) WJXBFS6,
sum(case when pa11.SCALE=1000 then pa11.WJXBFSd else pa11.WJXBFSSe end) WJXBFS7,
sum(case when pa11.SCALE=1000 then pa11.WJXBFSf else pa11.WJXBFS10 end) WJXBFS8,
sum(case when pa11.SCALE=1000 then pa11.WJXBFS11 else pa11.WJXBFS12 end) WJXBFS9,
sum(case when pa11.SCALE=1000 then pa11.WJXBFS13 else pa11.WJXBFS14 end) WJXBFSa,
sum(case when pa11.SCALE=1000 then pa11.WJXBFS15 else pa11.WJXBFS16 end) WJXBFSb,
sum(case when pa11.SCALE=1000 then pa11.WJXBFS17 else pa11.WJXBFS18 end) WJXBFSc
from                                    ZZMD04 pa11
join    DWHSTG.DIM_LE_CC_FN_DIV_MAP a12
on      (pa11.COST_CENTER_CODE = a12.COST_CENTER_CODE and
pa11.LEGAL_ENTITY_CODE = a12.LEGAL_ENTITY_CODE)
where                                   pa11.SCALE in (1000)
and a12.GRP in ('Retail Banking')
and pa11.GODWFLAG5_1 = 1)
group by                                pa11.LEGAL_ENTITY_CODE,
pa11.YEAR_S,
pa11.FC_GL_NO,
pa11.SCALE,
pa11.COST_CENTER_CODE

create table ZZMD06 nologging as
select a11.YEAR_S YEAR_S,
a16.LEGAL_ENTITY_CODE LEGAL_ENTITY_CODE,
a15.GL_ACCOUNT_CODE FC_GL_NO,
a12.SCALE SCALE,
a14.COST_CENTER_CODE COST_CENTER_CODE,
(sum(CASE WHEN a13.MONTH_ID=1 THEN a11.MONTH_01
WHEN a13.MONTH_ID=2 THEN a11.MONTH_02
WHEN a13.MONTH_ID=3 THEN a11.MONTH_03
WHEN a13.MONTH_ID=4 THEN a11.MONTH_04
WHEN a13.MONTH_ID=5 THEN a11.MONTH_05
WHEN a13.MONTH_ID=6 THEN a11.MONTH_06
WHEN a13.MONTH_ID=7 THEN a11.MONTH_07
WHEN a13.MONTH_ID=8 THEN a11.MONTH_08
WHEN a13.MONTH_ID=9 THEN a11.MONTH_09
WHEN a13.MONTH_ID=10 THEN a11.MONTH_10
WHEN a13.MONTH_ID=11 THEN a11.MONTH_11
WHEN a13.MONTH_ID=12 THEN a11.MONTH_12
ELSE NULL END) / 1000.0) WJXBFS1,
(sum(CASE WHEN a13.MONTH_ID=1 THEN a11.MONTH_01
WHEN a13.MONTH_ID=2 THEN a11.MONTH_02
WHEN a13.MONTH_ID=3 THEN a11.MONTH_03
WHEN a13.MONTH_ID=4 THEN a11.MONTH_04
WHEN a13.MONTH_ID=5 THEN a11.MONTH_05
WHEN a13.MONTH_ID=6 THEN a11.MONTH_06
WHEN a13.MONTH_ID=7 THEN a11.MONTH_07
WHEN a13.MONTH_ID=8 THEN a11.MONTH_08
WHEN a13.MONTH_ID=9 THEN a11.MONTH_09
WHEN a13.MONTH_ID=10 THEN a11.MONTH_10
WHEN a13.MONTH_ID=11 THEN a11.MONTH_11
WHEN a13.MONTH_ID=12 THEN a11.MONTH_12
ELSE NULL END) / 1000000.0) WJXBFS2,
(sum(CASE WHEN a13.MONTH_ID=1 THEN a11.MONTH_01
WHEN a13.MONTH_ID=2 THEN (a11.MONTH_01 + a11.MONTH_02)

WHEN a13.MONTH_ID=10 THEN
WHEN a13.MONTH_ID=3 THEN ((a11.MONTH 01 + a11.MONTH_02) + a11.MONTH_03)
WHEN
a13.MONTH_ID=4 THEN WHEN a13.MONTH_ID=5 THEN WHEN a13.MONTH_ID=6 THEN WHEN a13.MONTH_ID=7 THEN WHEN a13.MONTH_ID=8 THEN WHEN a13.MONTH_ID=9 THEN
((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05)
(((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04)
(((((a11.MONTH 01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06)
((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07)
((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11. MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08) + a11.MONTH_09)
WHEN a13.MONTH_ID=11 THEN
WHEN a13.MONTH_ID=12 THEN
(((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08)
(((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08) + a11.MONTH_09) + a11.MONTH_10)
((((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08) + a11.MONTH_09) + a11.MONTH_10) + a11.MONTH_11)
(((((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08) + a11.MONTH_09) + a11.MONTH 10) + a11.MONTH 11) + a11.MONTH_12) (sum(CASE WHEN a13.MONTH_ID=1 THEN a11.MONTH_01
ELSE NULL END) / 1000.0) WJXBFS3,
WHEN a13.MONTH_ID=2 THEN WHEN a13.MONTH_ID=3 THEN
WHEN a13.MONTH ID=4 THEN
a13.MONTH_ID=5 THEN
WHEN
WHEN
WHEN
a13.MONTH_ID=6 THEN a13.MONTH_ID=7 THEN
WHEN
a13.MONTH_ID=8 THEN
WHEN
a13.MONTH_ID=9 THEN
WHEN
WHEN
a13.MONTH_ID=10 THEN
a13.MONTH_ID=11 THEN WHEN a13.MONTH_ID=12 THEN
ELSE NULL END) / 1000000.0) WJXBFS4,
from
(a11.MONTH_01 + a11.MONTH_02)
((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03)
(((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04)
((((a11.MONTH_01 + a11.MONTH_02) + a11. MONTH_03) + a11.MONTH_04) + a11.MONTH_05)
(((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06)
((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07)
(((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08)
((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08) + a11.MONTH_09)
(((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08) + a11.MONTH_09) + a11.MONTH_10)
((((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08) + a11.MONTH_09) + a11.MONTH_10) + a11.MONTH 11)
(((((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08) + a11.MONTH_09) + a11.MONTH_10) + a11.MONTH 11) + a11.MONTH_12)
(sum((((((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08) + a11.MONTH_09) + a11.MONTH_10) + a11.MONTH 11) + a11.MONTH_12)) / 1000.0) WJXBFS5, (sum((((((((((((a11.MONTH_01 + a11.MONTH_02) + a11.MONTH_03) + a11.MONTH_04) + a11.MONTH_05) + a11.MONTH_06) + a11.MONTH_07) + a11.MONTH_08) + a11.MONTH_09) + a11.MONTH_10) + a11.MONTH 11) + a11.MONTH_12)) / 1000000.0) WJXBFS6 DWHSTG. LEDGER_STAT_FULL a11 cross join join
where
on
join
DWHSTG.DIM CUR_SCALE OFSAATM.DIM_MONTH_YEAR a13 (a11.YEAR_S = a13. YEAR_S) OFSAATM.DIM COST CENTER B
a12
a14
on
join
on
(a11.GL_ACCOUNT_ID = a15.GL_ACCOUNT_ID)
join
a16
on
join
on
(a11.COST_CENTER_ID = a14.COST_CENTER_ID) OFSAATM.DIM GENERAL_LEDGER_B a15
OFSAATM.DIM_LEGAL_ENTITY_B
(a11. LEGAL_ENTITY_ID = a16. LEGAL_ENTITY_ID) DWHSTG.DIM_LE_CC_FN_DIV_MAP
a17
(a14.COST_CENTER_CODE = a17.COST_CENTER_CODE and
a16.LEGAL_ENTITY_CODE = a17.LEGAL_ENTITY_CODE)
(a17.GRP in ('Retail Banking')
and a11.FINANCIAL_ELEM_ID in (212, 457, 10050, 10051, 10005, 10002, 10150, 10009)
and a12.SCALE in (1000)
and a11.YEAR_S = cast (2023 as INTEGER)
and a13.MONTH_ID in (3)
and a11.CONSOLIDATION_CD in (200))
group by
a11.YEAR_S,
a16.LEGAL ENTITY_CODE,
a15.GL_ACCOUNT_CODE,
a12.SCALE,
a14.COST_CENTER_CODE
create table ZZMD07 nologging as select
from
pa11.YEAR_S YEAR_S,
pa11.LEGAL_ENTITY_CODE LEGAL_ENTITY_CODE, pa11.FC_GL_NO FC_GL_NO,
pa11.SCALE SCALE,
pa11.COST_CENTER_CODE COST_CENTER_CODE,
sum(case when pa11.SCALE=1000 then pa11.WJXBFS1 else pa11.WJXBFS2 end) WJXBFS1,
sum(case when pa11.SCALE=1000 then pa11.WJXBFS3 else pa11.WJXBFS4 end) WJXBFS2 
ZZMD06 pa11

join
DWHSTG.DIM_LE_CC_FN_DIV_MAP
a12
on (pa11.COST_CENTER_CODE = a12.COST_CENTER_CODE and
pa11.LEGAL_ENTITY_CODE = a12.LEGAL_ENTITY_CODE)
where (pa11.SCALE in (1000)
and a12.GRP in ('Retail Banking'))
group by
pa11.YEAR_S,
pa11.LEGAL_ENTITY_CODE,
pa11.FC_GL_NO,
pa11.SCALE,
pa11.COST_CENTER_CODE
create table ZZSP08 nologging as
select
from where
pa11.YEAR_S YEAR_S,
pa11.LEGAL_ENTITY_CODE LEGAL_ENTITY_CODE, pa11.FC_GL_NO FC_GL_NO,
pa11.SCALE SCALE,
pa11.COST_CENTER_CODE COST_CENTER_CODE,
case when pa11.SCALE=1000 then pa11.WJXBFS5 else pa11.WJXBFS6 end WJXBFS1 ZZMD06 pa11
pa11.SCALE in (1000)
create table ZZSP09 nologging as
select pa11.YEAR_S YEAR_S,
from where
pa11.LEGAL_ENTITY_CODE LEGAL_ENTITY_CODE, pa11.FC_GL_NO FC_GL_NO,
pa11.SCALE SCALE,
pa11.COST_CENTER_CODE COST_CENTER_CODE,
case when pa11.SCALE=1000 then pa11.WJXBFS3 else pa11.WJXBFS4 end WJXBFS1 ZZMD02 pa11
pa11.SCALE in (1000)
create table ZZMDOA nologging as
select coalesce (pa11. YEAR_S, pa12.YEAR_S) YEAR_S,
from
coalesce (pa11.LEGAL_ENTITY_CODE, pa12. LEGAL_ENTITY_CODE) LEGAL ENTITY_CODE, coalesce(pa11.FC_GL_NO, pa12.FC_GL_NO) FC_GL_NO, coalesce (pa11.SCALE, pa12.SCALE) SCALE,
coalesce (pa11.COST_CENTER_CODE, pa12.COST_CENTER_CODE)
pa11.WJXBFS1 WJXBFS1,
pa12.WJXBFS1 WJXBFS2 ZZSP08 pa11
full outer join ZZSP09 pa12
on (pa11.COST CENTER_CODE
COST_CENTER_CODE,
=
pa12.COST CENTER_CODE and
pa11.FC_GL_NO = pa12.FC_GL_NO and
pa11.LEGAL_ENTITY_CODE = pa12. LEGAL_ENTITY_CODE and pa11.SCALE = pa12.SCALE and
pa11.YEAR_S
=
pa12.YEAR_S)
create table ZZMDOB nologging as
select pa11.YEAR_S YEAR_S,
pa11.LEGAL_ENTITY_CODE LEGAL ENTITY_CODE,
pa11.FC_GL_NO FC_GL_NO,
pa11.SCALE SCALE,
pa11.COST CENTER_CODE COST_CENTER_CODE,
sum(case when pa11.SCALE=1000 then pa11.WJXBFS19 else pa11.WJXBFS1a end) WJXBFS1, sum(case when pa11.SCALE=1000 then pa11.WJXBFS1b else pa11.WJXBFS1c end) WJXBFS2, sum(case when pa11.SCALE=1000 then pa11.WJXBFS1d else pa11.WJXBFS1e end) WJXBFS3, sum(case when pa11.SCALE=1000 then pa11.WJXBFS1f else pa11.WJXBFS20 end) WJXBFS4, sum(case when pa11.SCALE=1000 then pa11.WJXBFS21 else pa11.WJXBFS22 end) WJXBFS5, sum(case when pa11.SCALE=1000 then pa11.WJXBFS23 else pa11.WJXBFS24 end) WJXBFS6, sum(case when pa11.SCALE=1000 then pa11.WJXBFS25 else pa11.WJXBFS26 end) WJXBFS7,

from
sum(case when pa11.SCALE=1000 then pa11.WJXBFS27 else pa11.WJXBFS28 end) WJXBFS8, sum(case when pa11.SCALE=1000 then pa11.WJXBFS29 else pa11.WJXBFS2a end) WJXBFS9, sum(case when pa11.SCALE=1000 then pa11.WJXBFS2b else pa11.WJXBFS2c end) WJXBFSa, sum(case when pa11.SCALE=1000 then pa11.WJXBFS2d else pa11.WJXBFS2e end) WJXBFSb, sum(case when pa11.SCALE=1000 then pa11.WJXBFS2f else pa11.WJXBFS30 end) WJXBFSC ZZMD04 pa11
join DWHSTG.DIM_LE_CC_FN_DIV_MAP
a12
on (pa11.COST_CENTER_CODE = a12.COST_CENTER_CODE and
pa11.LEGAL_ENTITY_CODE = a12. LEGAL_ENTITY_CODE)
where (pa11.SCALE in (1000)
and a12.GRP in ('Retail Banking')
and pa11.GODWFLAGC_1 = 1)
group by
pa11.YEAR_S,
pa11.LEGAL_ENTITY_CODE, pa11.FC_GL_NO, pa11.SCALE,
pa11.COST CENTER_CODE
select distinct coalesce (pa11.COST_CENTER_CODE, pa12.COST_CENTER_CODE, pa13.COST_CENTER_CODE, pa14.COST_CENTER_CODE, pa15.COST CENTER_CODE, pa16.COST_CENTER_CODE) COST_CENTER_CODE, a17.COST_CENTER_DESC COST_CENTER_DESCO,
a17.COUNTRY COUNTRY,
coalesce (pa11.SCALE, pa12.SCALE, pa13.SCALE, pa14.SCALE, pa15.SCALE, pa16.SCALE) SCALE,
a110.SCALE_DESC SCALE_DESC,
a17.DIV DIV,
a17.FUNC FUNC,
coalesce(pa11.FC_GL_NO, pa12.FC_GL_NO, pa13.FC_GL_NO, pa14.FC_GL_NO, pa15.FC_GL_NO, pa16.FC_GL_NO) FC_GL_NO, a17.GRP GRP,
coalesce(pa11.LEGAL_ENTITY_CODE, pa12. LEGAL_ENTITY_CODE, pa13.LEGAL_ENTITY_CODE, pa14. LEGAL_ENTITY_CODE, pa15. LEGAL_ENTITY_CODE, pa16.LEGAL_ENTITY_CODE) LEGAL_ENTITY_CODE,
a19.LEVEL1_ORDER LEVEL1_ORDER,
a19.LEVEL1_CLASSIFICATION LEVEL1_CLASSIFICATION,
a19. LEVEL2_ORDER LEVEL2_ORDER,
a19.LEVEL2_CLASSIFICATION LEVEL2_CLASSIFICATION,
a18.LEVEL3_ORDER LEVEL3_ORDER,
a19.LEVEL3_CLASSIFICATION LEVEL3_CLASSIFICATION,
coalesce(pa11.YEAR_S, pa12.YEAR_S, pa13.YEAR_S, pa14.YEAR_S, pa15.YEAR_S, pa16.YEAR_S) YEAR_S,
pa11.WJXBFS1 WJXBFS1,
pa11.WJXBFS2 WJXBFS2,
pa12.WJXBFS1 WJXBFS3,
pa11.WJXBFS3 WJXBFS4,
pa13.WJXBFS1 WJXBFS5,
pa11.WJXBFS4 WJXBFS6,
pa13.WJXBFS2 WJXBFS7,
pa11.WJXBFS5 WJXBFS8,
pa13.WJXBFS3 WJXBFS9,
pa11.WJXBFS6 WJXBFSa,
pa13.WJXBFS4 WJXBFSb,
pa11.WJXBFS7 WJXBFSC,
pa13.WJXBFS5 WJXBFSd,
pa11.WJXBFS8 WJXBFSe,
pa13.WJXBFS6 WJXBFSF,
pa11.WJXBFS9 WJXBFS10,
pa13.WJXBFS7 WJXBFS11,
pa11.WJXBFSa WJXBFS12,
pa13.WJXBFS8 WJXBFS13,
pa11.WJXBFSb WJXBFS14,
pa13.WJXBFS9 WJXBFS15,
pa11.WJXBFSC WJXBFS16,
pa13.WJXBFSa WJXBFS17,
pa11.WJXBFSd WJXBFS18,
pa13.WJXBFSb WJXBFS19,

From
pa11.WJXBFSe WJXBFS1a, pa13.WJXBFSC WJXBFS1b, pa14.WJXBFS1 WJXBFS1C, pa14.WJXBFS2 WJXBFS1d, pa15.WJXBFS1 WJXBFS1e, pa16.WJXBFS1 WJXBFS1f, pa16.WJXBFS2 WJXBFS20, pa16.WJXBFS3 WJXBFS21, pa16.WJXBFS4 WJXBFS22, pa16.WJXBFS5 WJXBFS23, pa16.WJXBFS6 WJXBFS24, pa16.WJXBFS7 WJXBFS25, pa16.WJXBFS8 WJXBFS26, pa16.WJXBFS9 WJXBFS27, pa16.WJXBFSa WJXBFS28, pa16.WJXBFSb WJXBFS29, pa16.WJXBFSC WJXBFS2a, pa15.WJXBFS2 WJXBFS2b ZZMD01 pa11
=
full outer join ZZMD03 pa12 on (pa11.COST_CENTER_CODE pa11.FC_GL_NO = pa12.FC_GL_NO and
pa12.COST_CENTER_CODE and
pa11.LEGAL_ENTITY_CODE = pa12.LEGAL_ENTITY_CODE and
pa11.SCALE = pa12.SCALE and
pa11.YEAR_S pa12.YEAR_S)
full outer join ZZMD05 pa13
on (coalesce (pa11.COST_CENTER_CODE, pa12.COST_CENTER_CODE) = pa13.COST_CENTER_CODE and coalesce(pa11.FC_GL_NO, pa12.FC_GL_NO) = pa13.FC_GL_NO and
coalesce(pa11.LEGAL_ENTITY_CODE, pa12. LEGAL_ENTITY_CODE) = pa13. LEGAL_ENTITY_CODE and
coalesce(pa11.SCALE, pa12.SCALE)
=
pa13.SCALE and
coalesce (pa11.YEAR_S, pa12.YEAR_S) = pa13.YEAR_S)
full outer join ZZMD07 pa14
on
(coalesce(pa11.COST_CENTER_CODE, pa12.COST CENTER_CODE, pa13.COST_CENTER_CODE)
coalesce(pa11.FC_GL_NO, pa12.FC_GL_NO, pa13.FC_GL_NO) = pa14.FC_GL_NO and
=
pa14.COST_CENTER_CODE and
coalesce (pa11.LEGAL_ENTITY_CODE, pa12. LEGAL_ENTITY_CODE, pa13.LEGAL_ENTITY_CODE) = pa14.LEGAL_ENTITY_CODE and coalesce(pa11.SCALE, pa12.SCALE, pa13.SCALE) = pa14.SCALE and
coalesce (pa11.YEAR_S, pa12.YEAR_S, pa13.YEAR_S) = pa14.YEAR_S)
full outer join ZZMDOA pa15
on (coalesce(pa11.COST_CENTER_CODE, pa12.COST_CENTER_CODE, pa13.COST_CENTER_CODE, pa14.COST_CENTER_CODE) = pa15.COST_CENTER_CODE and coalesce(pa11.FC_GL_NO, pa12.FC_GL_NO, pa13.FC_GL_NO, pa14.FC_GL_NO) = pa15.FC_GL_NO and coalesce(pa11.LEGAL_ENTITY_CODE, pa12. LEGAL_ENTITY_CODE, pa13.LEGAL_ENTITY_CODE, pa14. LEGAL_ENTITY_CODE) = pa15. LEGAL_ENTITY_CODE and coalesce (pa11.SCALE, pa12.SCALE, pa13.SCALE, pa14.SCALE) = pa15.SCALE and
coalesce (pa11. YEAR_S, pa12.YEAR_S, pa13.YEAR_S, pa14.YEAR_S) pa15.YEAR_S)
full outer join ZZMDOB pa16
on
(coalesce(pa11.COST_CENTER_CODE, pa12.COST CENTER_CODE, pa13.COST_CENTER_CODE, pa14. COST_CENTER_CODE, pa15.COST_CENTER_CODE) coalesce(pa11.FC_GL_NO, pa12.FC_GL_NO, pa13.FC_GL_NO, pa14.FC_GL_NO, pa15.FC_GL_NO) = pa16.FC_GL_NO and
=
pa16.COST CENTER_CODE and
coalesce(pa11.LEGAL_ENTITY_CODE, pa12. LEGAL_ENTITY_CODE, pa13.LEGAL_ENTITY_CODE, pa14. LEGAL_ENTITY_CODE, pa15.LEGAL_ENTITY_CODE) = pa16.LEGAL_ENTITY_CODE and coalesce(pa11.SCALE, pa12.SCALE, pa13.SCALE, pa14.SCALE, pa15.SCALE) pa16.SCALE and
=
coalesce(pa11.YEAR_S, pa12.YEAR_S, pa13.YEAR_S, pa14. YEAR_S, pa15.YEAR_S) pa16.YEAR_S)
join DWHSTG.DIM_LE_CC_FN_DIV_MAP
a17
=
a17.COST_CENTER_CODE and
on (coalesce (pa11.COST_CENTER_CODE, pa12.COST_CENTER_CODE, pa13.COST_CENTER_CODE, pa14.COST_CENTER_CODE, pa15.COST_CENTER_CODE, pa16.COST_CENTER_CODE) coalesce(pa11.LEGAL_ENTITY_CODE, pa12. LEGAL_ENTITY_CODE, pa13. LEGAL_ENTITY_CODE, pa14. LEGAL_ENTITY_CODE, pa15.LEGAL_ENTITY_CODE, pa16.LEGAL_ENTITY_CODE) = a17.LEGAL_ENTITY_CODE) join
on
join
DWHSTG.DIM_EXP_ALLOC_GL_MAP
a18
(coalesce(pa11.FC_GL_NO, pa12.FC_GL_NO, pa13.FC_GL_NO, pa14. FC_GL_NO, pa15.FC_GL_NO, pa16.FC_GL_NO) a18.FC_GL_NO) DWHSTG.DIM_EXPENSE_LEVEL
a19
on (a18.LEVEL3_ORDER = a19. LEVEL3_ORDER and
a18.SCH3_ORDER= a19.SCH3_ORDER)
join DWHSTG.DIM_CUR_SCALE
a110
on (coalesce (pa11.SCALE, pa12.SCALE, pa13.SCALE, pa14.SCALE, pa15.SCALE, pa16.SCALE)
=
a110.SCALE)

drop table ZZMD00 purge
drop table ZZMD01 purge
drop table ZZMD02 purge
drop table ZZMD03 purge
drop table ZZMD04 purge
drop table ZZMD05 purge
drop table ZZMD06 purge
drop table ZZMD07 purge
drop table ZZSP08 purge
drop table ZZSP09 purge
drop table ZZMDOA purge
drop table ZZMDOB purge